<?php
/**
 * This source file is proprietary and part of Rethings.
 *
 * (c) Rethings Inc.
 *
 * @see https://www.rethings.io
 */

declare(strict_types=1);

namespace Tests\Feature\Domains\Device;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Testing\TestResponse;
use Rethings\Domains\App\App;
use Tests\AssertRethingsResource;
use Tests\Concerns\HasJWT;
use Tests\Concerns\WithDataset;
use Tests\RethingsDataSamples;
use Tests\TestCase;

class GetDeviceCredentialTest extends TestCase
{
    use RefreshDatabase, HasJWT, WithDataset, AssertRethingsResource, RethingsDataSamples;

    public const ROUTE_NAME = 'devices.get-credential';

    public function createDataset(): array
    {
        return [
            App::class => [
                self::createAppSample(),
            ],
        ];
    }

    public function registerDeviceWithAutogeneratedId(): TestResponse
    {
        /** @var TestResponse $response */
        return self::postJson(route('devices.store'), [
            'name' => 'Test Device',
            'metadata' => ['foo' => 'bar'],
            'tags' => ['sample'],
        ], self::getConsumerAuthHeaders('consumer-01', 'app_01'));
    }

    public function registerDeviceWithProvidedId(): TestResponse
    {
        /** @var TestResponse $response */
        return self::postJson(route('devices.store', ['device_01']), [
            'name' => 'Test Device',
            'metadata' => ['foo' => 'bar'],
            'tags' => ['sample'],
        ], self::getConsumerAuthHeaders('consumer-01', 'app_01'));
    }

    public function testWithAutogeneratedIdForDevice(): void
    {
        $registrationResponse = $this->registerDeviceWithAutogeneratedId();
        /** @var TestResponse $response */
        $response = self::getJson(route(static::ROUTE_NAME, [$registrationResponse['id']]), self::getConsumerAuthHeaders('consumer-01', 'app_01'));
        $response->assertOk();
        self::assertMqttCredentialResource(
            $response,
            $registrationResponse['id']
        );
    }

    public function testWithProvidedIdForDevice(): void
    {
        $registrationResponse = $this->registerDeviceWithProvidedId();
        /** @var TestResponse $response */
        $response = self::getJson(route(static::ROUTE_NAME, [$registrationResponse['id']]), self::getConsumerAuthHeaders('consumer-01', 'app_01'));
        $response->assertOk();
        self::assertMqttCredentialResource(
            $response,
            $registrationResponse['id']
        );
    }
}
